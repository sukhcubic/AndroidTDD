apply plugin: 'com.android.application'
apply plugin: "de.mannodermaus.android-junit5"


android {
    compileSdkVersion 28
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.example.notetaking"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        androidTest.java.srcDirs += "src/common/java"
        test.java.srcDirs += "src/common/java"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // -------- INSTRUMENTATION TESTS (use JUnit4)
    androidTestImplementation 'junit:junit:4.12'
    // AndroidX test
    androidTestImplementation "androidx.test:core:1.1.0"
    androidTestImplementation "androidx.test:runner:1.1.0"
    // Architecture components testing
    def androidx_arch_test_version = "2.0.1"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"

    // -------- LOCAL UNIT TESTS (use JUnit5)
    // JUnit Jupiter
    def junit_jupiter_version = "5.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    // -------- MOCKITO
    def mockito_version = "2.19.0"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    // Dagger
    def dagger_version = "2.23.2"

    // Dagger2 core
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    // Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    def material_version = "1.1.0-alpha06"
    implementation "com.google.android.material:material:$material_version"

    def room_version = "2.1.0-beta01"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"


    // ViewModel and LiveData
    def lifecycle_version = '2.1.0-alpha04'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"


    // Reactive Streams (convert Observable to LiveData)
    def reactivestreams_version = "1.1.1"
    implementation "android.arch.lifecycle:reactivestreams:$reactivestreams_version"

    // RxJava
    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // RxAndroid
    def rxandroid_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

}
